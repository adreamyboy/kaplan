<?php
	if(!defined('sugarEntry') || !sugarEntry) die('Not A Valid Entry Point');
	
	// http://localhost/crm3/index.php?entryPoint=downloadScheduleEntryPoint&product_id=S-1658
	
	require_once('include/Sugarpdf/Sugarpdf.php');
    require_once('modules/GI_Products/GI_Products.php');

	class GI_ProductsSugarpdfschedule extends Sugarpdf
	{
	    /**
	     * Override
	     */
		
		var $product;
	    
	    function process(){
	        $this->display();
	        $this->buildFileName();
	        $this->download();
	    }
	
	    /**
	     * Custom header
	     */
	    public function Header()
	    {
	        $logo = 'custom/themes/default/images/company_logo.png';
	        $bg = 'orange';
	        $product = $this->product;
	        
	        $html = <<<PDF
<table border="0">
    <tr>
        <td valign="top">
            <img width="200" src={$logo}></img>
        </td>
        <td valign="top">
            <ul>
                <li>Code: {$product->code}</li>
                <li>Name: {$product->name}</li>
            </ul>
        </td>
    </tr>
</table>
PDF;
	
	        $this->SetY(10);
	        $this->SetFont(PDF_FONT_NAME_MAIN, 'B', 10);
	        
	        $this->writeHTML($html, true, false, false, false, '');
	    }
	
	    /**
	     * Custom footer
	     */
	    public function Footer()
	    {
	        $pages = '<p>Page ' . $this->getAliasNumPage() . ' of ' . $this->getAliasNbPages() . '</p>';
	        //$signature = '<p style="text-align: center;">THIS IS A COMPUTER-GENERATED DOCUMENT AND IT DOES NOT REQUIRE A SIGNATURE.<br />THIS DOCUMENT SHALL NOT BE INVALIDATED SOLELY ON THE GROUND THAT IT IS NOT SIGNED.</p>';
	        $signature = '';
	        $address = '<p style="text-align: center;">Genesis Institute, Office 2401, Vision Tower, Business Bay, Dubai, 501715, United Arab Emirates<br />Tel: +971 4 554 6184, Fax: +971 4 554 6194, Email: <a href="mailto:info@genesisreview.com">info@genesisreview.com</a></p>';
	        
	        $this->SetFont(PDF_FONT_NAME_MAIN, '', 9);
	        $this->SetY(-40);
	        $this->writeHTML($signature, true, false, false, false, '');
	        $this->drawLine();
	        $this->writeHTML($address, true, false, false, false, '');
	        $this->writeHTML($pages, true, false, false, false, '');
	    }
	
	    /**
	     * Predisplay content
	     */
	    function preDisplay()
	    {
	        //Adds a predisplay page
	        $this->AddPage();
	        $this->SetFont(PDF_FONT_NAME_MAIN,'',PDF_FONT_SIZE_MAIN);
	        $this->Ln();
	        $this->MultiCell(0,0,'Predisplay Content',0,'C');
	    }
	
	    /**
	     * Main content
	     */
	    function display()
	    {
	        //add a display page
	        $this->AddPage();
	        $this->setPageOrientation('P', true, 45);
	        $this->SetFont(PDF_FONT_NAME_MAIN,'',9);//PDF_FONT_SIZE_MAIN);
	        $this->SetY(50);
	        $this->SetMargins(PDF_MARGIN_LEFT, 50, PDF_MARGIN_RIGHT, 100);
	        
	        $bg = 'orange';
	        $product = $this->product;
	        
	        // Show 'Sessions' list
	        
	        $html = <<<PDF
<h3>Sessions</h3>
<table border="1" cellspacing="0" cellpadding="3">
	<tbody>
		<tr style="background-color: {$bg}">
			<td width="30"><b>No.</b></td>
			<td width="210"><b>Session</b></td>
			<td width="110"><b>Date</b></td>
			<td width="90"><b>Duration (hours)</b></td>
			<!--<td width="90"><b>Instructor</b></td>-->
			<td width="100"><b>Location</b></td>
		</tr>
PDF;
	        $i = 0;
	        $collection = $product->get_sessions();
	        
			usort($collection, array("GI_ProductsSugarpdfschedule", "sort_collection_by_meeting_date"));
			
	        foreach ($collection as $item) {
	            $duration = $item->duration_hours + ($item->duration_minutes / 60);
	            $i++;
	            
	            $item_date_start_date = date("l, d M Y", strtotime($item->date_start . "+ 4 hours"));
	            $item_date_start_time = date("H:i", strtotime($item->date_start . "+ 4 hours"));
	            $item_date_start = date("m/d/Y H:i", strtotime($item->date_start . "+ 4 hours"));
	            
	            $item_location = ($item->location == '') ? "TBD" : $item->location;
                
	$html .= <<<PDF
        <tr>
            <td valign="top" width="30">
                <p>{$i}</p>
            </td>
            <td valign="top" width="210">
                <p>{$item->name}</p>
            </td>
            <td valign="top" width="110">
                <p>{$item_date_start}</p>
            </td>
            <td valign="top" width="90">
                <p>{$duration}</p>
            </td>
            <!--
            <td valign="top" width="90">
                <p>{$item->assigned_user_name}</p>
            </td>
            -->
            <td valign="top" width="100">
                <p>{$item_location}</p>
            </td>
        </tr>
PDF;
	        }
	
	$html .= <<<PDF
    </tbody>
</table>
PDF;
	        
	        $this->writeHTML($html, true, false, false, false, '');
	    }
	
	    /**
	     * This method draw an horizontal line with a specific style.
	     */
	    protected function drawLine()
	    {
	        $this->SetLineStyle(array('width' => 0.85 / $this->getScaleFactor(), 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => array(220, 220, 220)));
	        $this->MultiCell(0, 0, '', 'T', 0, 'C');
	    }
	    
	    /**
	     * Build filename
	     */
	    function buildFileName()
	    {
	        $this->fileName = 'schedule-' . date('Y-m-d') . '.pdf';
	    }
	
	    protected function download()
	    {
	        $this->Output($this->fileName, 'I');
	        return true;
	    }
	    
	    static function sort_collection_by_meeting_date($a, $b) {
	        $name_a = $a->date_start;
	        $name_b = $b->date_start;
			//return strcmp($name_a, $name_b);
			return (strtotime($name_a) < strtotime($name_b)) ? -1 : 1;
	    }
	}
	
	$product = new GI_Products();
	
	if (isset($_REQUEST['product_id'])) {
		$product_id = $_REQUEST['product_id'];
		$product->retrieve($product_id);
		$pdf = new GI_ProductsSugarpdfschedule();
		$pdf->product = $product;
		ob_end_clean();
		$pdf->process();
	}
?>